{"version":3,"sources":["card/card.component.jsx","card-list/card-list.component.jsx","search/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","name","email","CardList","map","Search","placeHolder","onChangeValue","placeholder","onChange","App","handleChange","e","setState","searchField","target","value","state","users","fetch","then","response","json","user","this","filteredUsers","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAGaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,4BACR,6BAA4BJ,EAAMG,QAAQE,MAAjCL,EAAMG,QAAQC,IACvB,6BAA4BJ,EAAMG,QAAQG,OAAjCN,EAAMG,QAAQC,QCJtBG,EAAW,SAACP,GACrB,OACI,qBAAKC,UAAU,YAAf,SAEQD,EAAMK,KAAKG,KAAI,SAAAL,GAAO,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCN1BK,G,YAAS,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,cACjC,OAAO,uBAEGV,UAAU,SACVW,YAAeF,EACfG,SAAWF,GAHP,YCmCHG,E,kDAlCb,aAAe,IAAD,8BACZ,gBAaFC,aAAe,SAAAC,GACX,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SAbxC,EAAKC,MAAQ,CACXC,MAAQ,GACRJ,YAAc,IAJJ,E,qDAQd,WAAoB,IAAD,OAChBK,MAAM,8CACNC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKV,SAAS,CAACK,MAAQK,S,oBAOvC,WAAU,IAAD,EAEwBC,KAAKP,MAA5BC,EAFD,EAECA,MAAOJ,EAFR,EAEQA,YACTW,EAAgBP,EAAMQ,QAAQ,SAAAH,GAAI,OAAIA,EAAKtB,KAAK0B,cAAcC,SAASd,EAAYa,kBAEzF,OACE,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAQS,YAAa,qBAAsBC,cAAgBiB,KAAKb,eAChE,cAAC,EAAD,CAAUV,KAAMwB,W,GA7BNI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.278c9f25.chunk.js","sourcesContent":["import './card.styles.css';\r\nimport React from 'react';\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className='card-container'>\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\r\n            <h1 key={props.monster.id}>{props.monster.name}</h1>\r\n            <h2 key={props.monster.id}>{props.monster.email}</h2>\r\n        </div>\r\n    )\r\n}","import './card-list.styles.css';\r\nimport { Card } from '../card/card.component'\r\nimport React from 'react';\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className='card-list'>\r\n            {\r\n                props.name.map(monster => (\r\n                    <Card key={monster.id} monster={monster}></Card>\r\n                    ))\r\n            }\r\n        </div>\r\n    )\r\n}","import React, {Component} from 'react';\r\nimport './search.styles.css'\r\n\r\nexport const Search = ({placeHolder, onChangeValue}) =>{\r\n    return <input \r\n              key=\"search\" \r\n              className=\"search\"\r\n              placeholder = {placeHolder}\r\n              onChange= {onChangeValue}>\r\n           </input>\r\n}\r\n","import react, { Component } from 'react';\nimport { CardList } from './card-list/card-list.component';\nimport './App.css';\nimport {Search} from '../src/search/search.component'\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      users : [],\n      searchField : ''\n    }\n  }\n\n  componentDidMount(){\n     fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(user => this.setState({users : user}));\n  }\n\n  handleChange = e => {\n      this.setState({searchField : e.target.value})\n  }\n\n  render() {\n\n    const { users, searchField } = this.state;\n    const filteredUsers = users.filter( user => user.name.toLowerCase().includes(searchField.toLowerCase()))\n\n    return (\n      <div className=\"App\">\n        <h1>MONSTERS ACADEMY</h1>\n        <Search placeHolder={\"Search the Monster\"} onChangeValue= {this.handleChange} />\n        <CardList name={filteredUsers}>\n        </CardList>\n      </div>\n    );\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}